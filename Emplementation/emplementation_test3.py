# 구현(시뮬레이션, 완전탐색 유형) 문제 - 왕실의 나이트 
# 8x8의 1~8 행과 a~h 열
# 나이트가 움직일 수 있는 형태는 'L자 형태'
# 1. 수평 두칸, 수직 한칸
# 2. 수직 두칸, 수평 한칸
# 나이트의 위치가 주어졌을 때, 나이트가 이동할 수 있는 전체 경우의 수를 구하라.

# <생각 정리>
# 행열의 위치를 c2처럼 표현하므로 
# 나이트의 8가지 경로를 하나씩 확인하며 각 위치로 이동 후, 범위 내에 있는지 확인한다.
# 리스트를 이용해서 8가지 방향에 대한 벡터 정의

# <코드>
num = input()  # 최초 
row = int(num[1])
column = int(ord(num[0])) - int(ord('a')) + 1    # ord() : 특정한 한 문자를 아스키 코드 값으로 변환해 주는 함수 <--> chr()
# 1부터 8이니까 +1

# 나이트가 이동할 수 있는 8가지 방향 정의
steps = [(-2, -1), (-1, -2), (1, -2), (2, -1), (2, 1), (1, 2), (-1, 2), (-2, 1)]

# 8가지 방향에 대해 각 위치로 이동 가능한지 확인
cnt = 0
for step in steps:  # steps 중 한 경로
  # 이동
  nrow = row + step[0]
  ncolumn = column + step[1]
  # 이동이 가능하면(범주에 속하면), cnt++
  if nrow >= 1 or nrow <= 8 or ncolumn >= 1 or ncolumn <= 8:
    cnt+=1
print(cnt)  
